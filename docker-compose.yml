services:
  postgres-dev:
    image: postgres:16
    restart: unless-stopped
    profiles: ["dev"]
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - technogym_project_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h ${POSTGRES_HOST} -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - technogym


  middelware-service:
    build:
      context: .
      target: dev
    restart: unless-stopped
    profiles: ["dev"]
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-dev:5432/${POSTGRES_DB}?schema=public
    ports:
      - "3000:3000"
    volumes:
      # Para desarrollo - hot reload
      - .:/app
      - /app/node_modules
    networks:
      - technogym
    command: >
      sh -c "
        echo 'Esperando base de datos...' &&
        npx prisma migrate deploy &&
        echo 'Migraciones aplicadas' &&
        npm run dev
      "


volumes:
  technogym_project_data:

networks:
  technogym:
    external: true